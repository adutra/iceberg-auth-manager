name: Publish Release

on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: 'Release version (e.g., 0.1.0)'
        required: true
      nextVersion:
        description: 'Next development version (e.g., 0.1.1-SNAPSHOT)'
        required: true

jobs:
  release:
    # Only run in the original repository, not forks
    if: github.repository == 'dremio/iceberg-auth-manager'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
      
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'
      
      - name: Update version for release
        run: echo "${{ github.event.inputs.releaseVersion }}" > version.txt
      
      - name: Build with Gradle
        run: ./gradlew clean build
      
      - name: Publish to Maven Repository
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: ./gradlew publish
      
      - name: Create Git tag
        run: |
          git add version.txt
          git commit -m "Release version ${{ github.event.inputs.releaseVersion }}"
          git tag -a v${{ github.event.inputs.releaseVersion }} -m "Release ${{ github.event.inputs.releaseVersion }}"
      
      - name: Update to next development version
        run: |
          echo "${{ github.event.inputs.nextVersion }}" > version.txt
          git add version.txt
          git commit -m "Prepare for next development version ${{ github.event.inputs.nextVersion }}"
      
      - name: Push changes
        run: |
          git push origin main
          git push origin v${{ github.event.inputs.releaseVersion }}